{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","placeholder","value","onChange","target","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","class","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAa9C,OAGI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,OAQd,2BACIO,KAAK,OACLC,YAAY,YAEZC,MAAOV,EACPW,SApBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,YA0B/Bb,EAAYgB,SAAW,CACnBf,c,OAAegB,EAAUC,KAAKC,Y,2BCjCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KACd,SAAAC,GAAQ,IAAD,EACH,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KCDJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACZnB,mBAAS,CAC/B0B,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAsBtC,OAjBAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBH,EACI,CACIf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAKGqB,EDhB2BK,CAAa1B,GAAjCa,EAHuB,EAG7BN,KAAca,EAHe,EAGfA,QACtB,OACI,oCACI,wBAAIJ,UAAU,4CAA4ChB,GACzDoB,GAAW,uBAAGJ,UAAU,qCAAb,eAEZ,yBAAKA,UAAU,YAIPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEbzCkB,EAAe,WAAM,MAEM/C,mBAAS,CAAC,WAFhB,mBAEvBgD,EAFuB,KAEXjD,EAFW,KAQ9B,OACI,oCACI,yBAAKkD,MAAM,+CAA+Cb,IAAI,sCAAsCC,IAAI,cAExG,kBAAC,EAAD,CAAatC,cAAeA,IAC5B,6BAEA,4BACKiD,EAAWpB,KAAI,SAAAT,GAAQ,OAAK,kBAAC,EAAD,CACzB2B,IAAK3B,EACLA,SAAUA,UCjB9B+B,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.6877cfb3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(c => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Buscar...\"\r\n\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\nAddCategory.propType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=25&api_key=20enSy41bBDE3DjZgPP2UsxMD7wWTc0W`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(\r\n        img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        }\r\n    )\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p >{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__jackInTheBox\">{category}</h3>\r\n            {loading && <p className=\" animate__animated animate__pulse\">Loadinng...</p>}\r\n\r\n            <div className=\"cardGrid\">\r\n\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem key={img.id} {...img} />)\r\n\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n\r\n            setstate(\r\n                {\r\n                    data: imgs,\r\n                    loading: false\r\n                }\r\n            );\r\n\r\n\r\n        })\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    // const categories = ['Rasta','Pony','Bola 8']\r\n    const [categories, setCategories] = useState(['Bola 8']);\r\n    // const handleAdd = () => {\r\n    //     setCategories(c => [...c, 'Bomberman']);\r\n    //     //    setCategories([...categories,'Bomberman']);\r\n\r\n    // }\r\n    return (\r\n        <>\r\n            <img class=\"logo animate__animated animate__jackInTheBox\" src=\"https://i.ibb.co/Z1H8Cv4/titulo.png\" alt=\"ToskoGifz\" ></img>\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {categories.map(category => (<GifGrid\r\n                    key={category}\r\n                    category={category} />\r\n                )\r\n                )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}